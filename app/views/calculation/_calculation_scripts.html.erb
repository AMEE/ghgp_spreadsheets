<% content_for :head do %>

  <% javascript_tag do %>

    $(document).ready(function(){

      setTableContainerWidths();

      $(".amee-drill, .amee-profile, .amee-metadatum").live('change',function() {
        data = rowParamString($(this))+"&"+termParamString($(this))
        row = $(this).closest('tr');
        if (!hasDbRecord($(this)) || $(this).is('.amee-drill')) {
          cells = getAllCellsInRow(row).add($("td.amee-result"));
        } else {
          cells = getRowOutputCells(row).add($("td.amee-result"));
        }
        renderLoadingGif(cells);
        updateCalculation(data);
      });

      helpNotes$ = helpNotes();

      helpNotes$.live('click', function() {
        $('p.note', $(this)).slideToggle();
      }).live('mouseover', function() {
        $(this).css('cursor','pointer');
      },function() {
        $(this).css('cursor','auto');
      });

      $('#guide-switch').live('click', function() {
        toggleGuide();
      }).live('mouseover', function() {
        $(this).css('cursor','pointer');
      },function() {
        $(this).css('cursor','auto');
      });

      $('.column-header').live('mouseover', function() {
        $(this).css('cursor','pointer');
      },function() {
        $(this).css('cursor','auto');
      }).live('click', function(){
        showGuideAndSpecificNote($(this).text())
      });

      $('#close-guide').live('click', function() {
        hideGuide();
      }).live('mouseover', function() {
        $(this).css('cursor','pointer');
      },function() {
        $(this).css('cursor','auto');
      });

      $('div.base').live('click',function () {
        window.open($(this).find('h3').attr('data'));
      });
    });

    function toggleGuide() {
      var helpContainerStatus = $('#guide_container').css('display');

      if (helpContainerStatus == 'none') {
        showGuide();
      } else {
        hideGuide();
      }
    }

    function showGuideAndSpecificNote(name) {
      if ($('#guide_container').css('display') == 'none') {
        showGuide();
      }

      helpNotes().each(function(){
        $(this).find('p').hide('slow');
        if ($(this).find('h3').text() == name) {
          $(this).find('p').slideDown('slow');
          scrollToNote($(this));
        }
      });
    }

    function scrollToNote(note) {
      var helpHeight = $('#help_container').height();
      var position = note.position();
      $('#help_container').animate({scrollTop: position.top-(helpHeight/2)}, 2000);
    }

    function showGuide() {
      $('#guide_container').fadeIn('slow');
      $('#guide-switch').text('Hide guide');
    }

    function hideGuide() {
      $('#guide_container').fadeOut('slow');
      $('#guide-switch').text('Show guide');
    }
    
    function helpNotes() {
      return $("div.note").bind('filter', function(){
        return !$(this).is('base');
      });
    }

    function setDrillWidths() {
      $(".amee-drill select").each(function(){
        $(this).width($(this).closest('td').width());
      });
    }

    function setTableContainerWidths() {
      setDrillWidths();
      var tableWidth = $('#calculation_table').width();
      if (tableWidth > 1480) {
        tableWidth = 1480;
      }
      $('#table_container').width(tableWidth);
      $('#calculation_page').width(tableWidth+25);
      $('#table-base-nav').width(tableWidth);
      $('#summary-link').css({float: 'right'});
    }

    function getAllCellsInRow(rowWrapper) {
      return $("td.amee-drill, td.amee-profile, td.amee-output", rowWrapper);
    }

    function getRowOutputCells(rowWrapper) {
      return $("td.amee-output", rowWrapper);
    }

    function hasDbRecord(object) {
      var row = object.closest('tr');

      if (typeof(row.attr('calc_db_id')) == 'undefined') {
        return false;
      } else {
        return true;
      }
    }

    function rowParamString(object) {
      var row = object.closest('tr');
      params = {
        row:       row.attr('id'),
      };
      if (typeof(row.attr('calc_db_id')) == 'undefined') {
        params.type = row.attr('calc_type');
      } else {
        params.id = row.attr('calc_db_id');
      }
      return jQuery.param(params);
    }

    function termParamString(object) {
      params = {
        path:      object.attr('class').split(" ")[1].split("-")[1],
        attribute: object.attr('class').split(" ")[2].split("-")[1],
        data:      object.attr('value')
      };
      return jQuery.param(params);
    }

    function updateCalculation(string) {
      jQuery.ajax({
        data:     string,
        dataType: 'script',
        type:     'post',
        url:      '/calculations/update'
      });

    }


  <% end %>
<% end %>